<div class="summary-skill skill-async">
  <h3>Asynchrone</h3>
  <p>
    Dans le système que l'on conçoit on n'a pas toujours besoin d'attendre que les tâches se terminent pour passer à la suite. Générer un PDF, envoyer un mail, appeler une API, toutes ces tâches peuvent être faites en parallèle pour gagner du temps. Il existe différents moyens de gérer l'asynchrone en Ruby on Rails, j'ai eu l'occasion de travailler avec Sidekiq et  la gem bunny pour RabbitMQ. L'outil ne fait pas tout, il est important de réfléchir à l'architecture de son application pour gérer l'asynchrone de manière efficace. Il faut notamment avoir en tête qu'exécuter une tâche en asynchrone c'est l'exécuter hors de son contexte d'origine et qu' aucun ordre n'est garanti. Il faut donc se poser les bonnes questions. Y a t-il une priorité parmi les tâches à exécuter ? Comment gérer un échec ? Comment gérer la concurrence ?
  </p>
</div>